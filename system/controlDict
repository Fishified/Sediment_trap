/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.7.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     sedFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         10;

deltaT          5e-5;

writeControl    adjustableRunTime;

writeInterval   0.0001;

purgeWrite      0;

writeFormat     binary;

writePrecision  6;

writeCompression uncompressed;

timeFormat      general;

timePrecision   6;

runTimeModifiable on;

adjustTimeStep  true;

maxCo           0.8;

maxAlphaCo      0.8;

maxDeltaT       0.5;

functions
{

    #includeFunc  surfaces
    #includeFunc  flowRatePatch


    sedBedElevation
    {
        type            surfaces;

        functionObjectLibs
        (
            "libsampling.so"
        );

        outputControl   outputTime;
        surfaceFormat  vtk;
        interpolationScheme cellPoint;

        fields
        (
            //alpha_a
            Ua
            Ub
        );

        surfaces
        (
            sixty_alpha_a
            {
                type        isoSurface;
                isoField    alpha_a;
                isoValue    0.6;
                interpolate true;
            }

            sixty_one_alpha_a
            {
                type        isoSurface;
                isoField    alpha_a;
                isoValue    0.61;
                interpolate true;
            }

            sixty_two_alpha_a
            {
                type        isoSurface;
                isoField    alpha_a;
                isoValue    0.62;
                interpolate true; 
            }

            sixty_three_alpha_a
            {
                type        isoSurface;
                isoField    alpha_a;
                isoValue    0.63;
                interpolate true;
            }

            sixty_four_alpha_a
            {
                type        isoSurface;
                isoField    alpha_a;
                isoValue    0.64;
                interpolate true;
            }
        );
    }

        sedVolumeDomain
        {
        type volFieldValue;
        libs ("libfieldFunctionObjects.so");
        log true;
        writeControl timeStep;
        writeFields true;
        regionType cellZone;
        name wholeDomain;
        operation volIntegrate;
        fields (alpha_a);
        }

        sedVolumeOnPlatform
        {
        type volFieldValue;
        libs ("libfieldFunctionObjects.so");
        log true;
        writeControl timeStep;
        writeFields true;
        regionType cellZone;
        name platFormSamplingVolume;
        operation volIntegrate;
        fields (alpha_a);
        }

        fluidVolumeOnPlatform
        {

        type volFieldValue;
        libs ("libfieldFunctionObjects.so");
        log true;
        writeControl timeStep;
        writeFields true;
        regionType cellZone;
        name platFormSamplingVolume;
        operation volIntegrate;
        fields (alpha_b);

        }     

        sedVolumeInTrap
        {

        type volFieldValue;
        libs ("libfieldFunctionObjects.so");
        log true;
        writeControl timeStep;
        writeFields true;
        regionType cellZone;
        name trapSamplingVolume;
        operation volIntegrate;
        fields (alpha_a);

        }

}


// ************************************************************************* //
